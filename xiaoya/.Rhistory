# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
labtest_data <- fread('datasets/raw_labtest_data.csv')
events_data <- fread('datasets/raw_events_data.csv')
target_data <- fread('datasets/raw_target_data.csv')
data_path <- 'datasets'
# 初始化DataHandler对象
data_handler <- init_data_handler(labtest_data, events_data, target_data, data_path)
debug(format_and_merge_dataframes)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
# debug(format_and_merge_dataframes)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
data_handler <- save_processed_data(data_handler)
# 初始化Pipeline对象并执行
pipeline <- Pipeline$new()
result <- pipeline$execute()
source('R/pipeline.R')
# 初始化Pipeline对象并执行
pipeline <- Pipeline$new()
source('R/pipeline.R')
# 初始化Pipeline对象并执行
pipeline <- Pipeline$new()
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
labtest_data <- fread('datasets/raw_labtest_data.csv')
events_data <- fread('datasets/raw_events_data.csv')
target_data <- fread('datasets/raw_target_data.csv')
data_path <- 'datasets'
# 初始化DataHandler对象
data_handler <- init_data_handler(labtest_data, events_data, target_data, data_path)
# debug(format_and_merge_dataframes)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
data_handler <- save_processed_data(data_handler)
# 初始化Pipeline对象并执行
pipeline <- Pipeline$new()
source('R/pipeline.R')
# 初始化Pipeline对象并执行
pipeline <- Pipeline$new()
install.packages('reticulate')
source('R/pipeline.R')
# 初始化Pipeline对象并执行
pipeline <- Pipeline$new()
result <- pipeline$execute()
result <- pipeline$execute()
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
# 初始化Pipeline对象并执行
pipeline <- Pipeline$new()
result <- pipeline$execute()
# 初始化Pipeline对象并执行
pipeline <- Pipeline$new()
result <- pipeline$execute()
debug(pipeline$execute)
result <- pipeline$execute()
source('R/pipeline.R')
# 初始化Pipeline对象并执行
pipeline <- Pipeline$new()
result <- pipeline$execute()
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
labtest_data <- fread('datasets/raw_labtest_data.csv')
events_data <- fread('datasets/raw_events_data.csv')
target_data <- fread('datasets/raw_target_data.csv')
data_path <- 'datasets'
# 初始化DataHandler对象
data_handler <- init_data_handler(labtest_data, events_data, target_data, data_path)
# debug(format_and_merge_dataframes)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
data_handler <- save_processed_data(data_handler)
View(data_handler)
View(data_handler[["merged_df"]])
data_handler[["standard_df"]]
data_handler[["raw_df"]]
data_handler[["raw_df"]]
data_handler[["standard_df"]]
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
labtest_data <- fread('datasets/raw_labtest_data.csv')
events_data <- fread('datasets/raw_events_data.csv')
target_data <- fread('datasets/raw_target_data.csv')
data_path <- 'datasets'
# 初始化DataHandler对象
data_handler <- init_data_handler(labtest_data, events_data, target_data, data_path)
debug(format_and_merge_dataframes)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
View(df)
View(df_new)
View(df_new)
View(df_new)
View(df_new)
View(df)
View(df)
View(row)
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
labtest_data <- fread('datasets/raw_labtest_data.csv')
events_data <- fread('datasets/raw_events_data.csv')
target_data <- fread('datasets/raw_target_data.csv')
data_path <- 'datasets'
# 初始化DataHandler对象
data_handler <- init_data_handler(labtest_data, events_data, target_data, data_path)
debug(format_and_merge_dataframes)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
View(df_new)
View(data_handler)
data_handler[["standard_df"]]
debug(format_and_merge_dataframes)
debug(format_and_merge_dataframes)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
# 初始化DataHandler对象
data_handler <- init_data_handler(labtest_data, events_data, target_data, data_path)
debug(format_and_merge_dataframes)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
labtest_data <- fread('datasets/raw_labtest_data.csv')
events_data <- fread('datasets/raw_events_data.csv')
target_data <- fread('datasets/raw_target_data.csv')
data_path <- 'datasets'
# 初始化DataHandler对象
data_handler <- init_data_handler(labtest_data, events_data, target_data, data_path)
debug(format_and_merge_dataframes)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
labtest_data <- fread('datasets/raw_labtest_data.csv')
events_data <- fread('datasets/raw_events_data.csv')
target_data <- fread('datasets/raw_target_data.csv')
data_path <- 'datasets'
# 初始化DataHandler对象
data_handler <- init_data_handler(labtest_data, events_data, target_data, data_path)
debug(format_and_merge_dataframes)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
gc()
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
labtest_data <- fread('datasets/raw_labtest_data.csv')
events_data <- fread('datasets/raw_events_data.csv')
target_data <- fread('datasets/raw_target_data.csv')
data_path <- 'datasets'
# 初始化DataHandler对象
data_handler <- init_data_handler(labtest_data, events_data, target_data, data_path)
debug(format_and_merge_dataframes)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
debug(merge_dataframes)
data_handler <- merge_dataframes(data_handler)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
labtest_data <- fread('datasets/raw_labtest_data.csv')
events_data <- fread('datasets/raw_events_data.csv')
target_data <- fread('datasets/raw_target_data.csv')
data_path <- 'datasets'
# 初始化DataHandler对象
data_handler <- init_data_handler(labtest_data, events_data, target_data, data_path)
debug(format_and_merge_dataframes)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
View(data_handler)
View(data_handler[["merged_df"]])
data_handler <- save_processed_data(data_handler)
View(data_handler)
write.csv(data_handler$standard_df$labtest,
file.path(data_handler$data_path, 'standard_labtest_data.csv'),
row.names = FALSE)
View(data_handler[["standard_df"]][["labtest"]])
is.data.table(data_handler$standard_df$labtest)
write.csv(data_handler$standard_df$labtest,
file.path(data_handler$data_path, 'standard_labtest_data.csv'),
row.names = FALSE)
fwrite(data_handler$standard_df$labtest,
file.path(data_handler$data_path, 'standard_labtest_data.csv'),
row.names = FALSE)
fwrite(data_handler$standard_df$events,
file.path(data_handler$data_path, 'standard_events_data.csv'),
row.names = FALSE)
fwrite(data_handler$standard_df$target,
file.path(data_handler$data_path, 'standard_target_data.csv'),
row.names = FALSE)
fwrite(data_handler$merged_df,
file.path(data_handler$data_path, 'standard_merged_data.csv'),
row.names = FALSE)
View(data_handler)
View(data_handler[["merged_df"]])
View(data_handler[["standard_df"]][["events"]])
data_handler$merged_df <- lapply(data_handler$merged_df, function(x) ifelse(is.null(x), NA, x))
fwrite(data_handler$merged_df,
file.path(data_handler$data_path, 'standard_merged_data.csv'),
row.names = FALSE)
gc()
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
labtest_data <- fread('datasets/raw_labtest_data.csv')
events_data <- fread('datasets/raw_events_data.csv')
target_data <- fread('datasets/raw_target_data.csv')
data_path <- 'datasets'
# 初始化DataHandler对象
data_handler <- init_data_handler(labtest_data, events_data, target_data, data_path)
debug(format_and_merge_dataframes)
# 执行数据处理操作
data_handler <- format_and_merge_dataframes(data_handler)
data_handler <- save_processed_data(data_handler)
debug(save_processed_data)
data_handler <- save_processed_data(data_handler)
debug(analyze_dataset)
result <- analyze_dataset(data_handler)
View(data_handler)
View(data_handler[["merged_df"]])
str(data_handler$merged_df[[feature]])
str(data_handler$merged_df[['Sex']])
str(data_handler$merged_df['['hemoglobin]])
str(data_handler$merged_df[['hemoglobin']])
str(data_handler$merged_df[['Urea']])
data_handler$merged_df[[feature]] <- unlist(data_handler$merged_df[[feature]])
unlist(data_handler$merged_df[['Urea']])
str(unlist(data_handler$merged_df[['Urea']]))
source('R/data_handler.R')
result <- analyze_dataset(data_handler)
debug(analyze_dataset)
result <- analyze_dataset(data_handler)
print(result)
View(result)
View(data_handler)
debug(format_and_merge_dataframes)
debug(format_dataframe)
format_dataframe(data_handler, 'events')
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
debug(format_dataframe)
format_dataframe(data_handler, 'events')
View(df_new)
View(row)
View(new_row)
View(row)
row$Value[i]
row$Name[i]
data.table(PatientID = patient_id, RecordTime = record_time, setNames(list(row$Value[i]), row$Name[i]))
row$Name[i])
row$Name[i]
new_row <- data.table(PatientID = patient_id, RecordTime = record_time)
column_name <- row$Name[i]
column_value <- row$Value[i]
new_row[, (column_name) := column_value]
print(new_row)
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
debug(format_dataframe)
data_handler <- format_dataframe(data_handler, 'events')
View(df_new)
View(df_new)
c
View(data_handler)
View(data_handler[["standard_df"]][["labtest"]])
View(data_handler[["standard_df"]][["events"]])
data_handler <- merge_dataframes(data_handler)
data_handler <- save_processed_data(data_handler)
result <- analyze_dataset(data_handler)
View(result)
View(events_data)
View(data_handler)
View(data_handler[["standard_df"]][["events"]])
View(data_handler[["merged_df"]])
debug(merge_dataframes)
data_handler <- merge_dataframes(data_handler)
View(events_standard_df)
View(df)
view(df$['Sex'])
view(df$Value['Sex'])
df$Value['Sex']
df$Value
data_handler <- format_dataframe(data_handler, 'labtest')
View(df_new)
data_handler <- merge_dataframes(data_handler)
View(df)
df$Sex
df$Sex
df[, (event_cols) := lapply(.SD, function(x) ifelse(is.na(x), zoo::na.locf(x, na.rm = FALSE), x)), .SDcols = event_cols]
df$Sex
n
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
debug(merge_dataframes)
data_handler <- merge_dataframes(data_handler)
df$Sex
View(events_standard_df)
df$Sex
View(df)
cols <- c("PatientID", "RecordTime", "Outcome", "LOS", "Sex", "Age")
View(data_handler)
View(data_handler[["merged_df"]])
View(labtest_data)
View(target_data)
data_handler <- save_processed_data(data_handler)
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
library(data.table)
source('R/data_handler.R')
source('R/pipeline.R')
labtest_data <- fread('datasets/raw_labtest_data.csv')
events_data <- fread('datasets/raw_events_data.csv')
target_data <- fread('datasets/raw_target_data.csv')
data_path <- 'datasets'
# data analysis
data_analyzer <- DataAnalyzer$new(config, model_path)
# 初始化Pipeline对象并执行
pipeline <- Pipeline$new()
debug(pipeline$execute)
result <- pipeline$execute()
View(Pipeline)
View(result)
View(Pipeline)
source('R/pipeline.R')
# 初始化Pipeline对象并执行
pipeline <- Pipeline$new()
debug(pipeline$execute)
result <- pipeline$execute()
View(labtest_data)
View(events_data)
View(labtest_data)
